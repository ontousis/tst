<DataModel name="m3" formatVersion="15" modelVersion="2" defQuery="" id="m3-psql1r2qcqlv3">
  <Description />
  <CustomInfo />
  <DMEOptions>
    <FormWidth>851</FormWidth>
    <FormHeight>672</FormHeight>
  </DMEOptions>
  <DBParams>
    <SqlDialect>MS SQL</SqlDialect>
    <ConnectionString>Data Source=localhost;Initial Catalog=CallRecords; User ID=newuser; Password=Newpassw0rd;</ConnectionString>
    <LoginPrompt>False</LoginPrompt>
    <GateClass>Korzh.EasyQuery.DbGates.SqlServerGate</GateClass>
  </DBParams>
  <Tables>
    <Table class="db" alias="CallResponses" schema="dbo" db="CallRecords" name="CallResponses" />
    <Table class="db" alias="Clients" schema="dbo" db="CallRecords" name="Clients" />
  </Tables>
  <Links />
  <Editors>
    <Editor id="_DTE" type="EDIT" resType="String" />
    <Editor id="_DPDE" type="DATETIME" resType="Unknown" defValue="${{Today}}" subType="Date" />
    <Editor id="_DPTE" type="DATETIME" resType="Unknown" defValue="${{Noon}}" subType="Time" />
    <Editor id="_DSDE" type="CUSTOMLIST" resType="Unknown" name="_DSDE" />
    <Editor id="_DSTE" type="CUSTOMLIST" resType="Unknown" name="_DSTE" />
  </Editors>
  <Operators>
    <Operator id="Equal" caption="is equal to" expr="{expr1} = {expr2}" format="{expr1} [[is equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotEqual" caption="is not equal to" expr="{expr1} &lt;&gt; {expr2}" format="{expr1} [[is not equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="LessThan" caption="is less than" expr="{expr1} &lt; {expr2}" format="{expr1} [[is less than]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="LessOrEqual" caption="is less than or equal to" expr="{expr1} &lt;= {expr2}" format="{expr1} [[is less than or equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="GreaterThan" caption="is greater than" expr="{expr1} &gt; {expr2}" format="{expr1} [[is greater than]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="GreaterOrEqual" caption="is greater than or equal to" expr="{expr1} &gt;= {expr2}" format="{expr1} [[is greater than or equal to]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="IsNull" caption="is null" expr="{expr1} IS NULL" format="{expr1} [[is null]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="IsNotNull" caption="is not null" expr="{expr1} IS NOT NULL" format="{expr1} [[is not null]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="IsTrue" caption="is true" expr="{expr1} = ${{true}}" format="{expr1} [[is true]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Boolean operators" cond="False">
      <Types>Bool</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotTrue" caption="is not true" expr="(({expr1} &lt;&gt; ${{true}}) OR ({expr1} IS NULL))" format="{expr1} [[is not true]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Boolean operators" cond="False">
      <Types>Bool</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="InList" caption="is in list" expr="{expr1} in ({expr2})" format="{expr1} [[is in list]] {expr2}" constFmt="{const}" kind="List" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotInList" caption="is not in list" expr="NOT ({expr1} in ({expr2}))" format="{expr1} [[is not in list]] {expr2}" constFmt="{const}" kind="List" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="Between" caption="is between" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[is between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" isRange="True" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotBetween" caption="is not between" expr="NOT ({expr1} BETWEEN {expr2} AND {expr3})" format="{expr1} [[is not between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" isRange="True" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="StartsWith" caption="starts with" expr="{expr1} LIKE {expr2}" format="{expr1} [[starts with]] {expr2}" constFmt="{const}{ws}" kind="Scalar" caseIns="False" editor="_DTE" group="String operators" cond="False">
      <Types>String,Memo,FixedChar</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotStartsWith" caption="does not start with" expr="NOT ({expr1} LIKE {expr2})" format="{expr1} [[does not start with]] {expr2}" constFmt="{const}{ws}" kind="Scalar" caseIns="False" editor="_DTE" group="String operators" cond="False">
      <Types>String,Memo,FixedChar</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="Contains" caption="contains" expr="{expr1} LIKE {expr2}" format="{expr1} [[contains]] {expr2}" constFmt="{ws}{const}{ws}" kind="Scalar" caseIns="False" editor="_DTE" group="String operators" cond="False">
      <Types>String,Memo,FixedChar</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotContains" caption="does not contain" expr="NOT ({expr1} LIKE {expr2})" format="{expr1} [[does not contain]] {expr2}" constFmt="{ws}{const}{ws}" kind="Scalar" caseIns="False" editor="_DTE" group="String operators" cond="False">
      <Types>String,Memo,FixedChar</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="InSubQuery" caption="in sub query" expr="{expr1} IN ({expr2})" format="{expr1} [[in sub query]] {expr2}" constFmt="{const}" kind="Query" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="NotInSubQuery" caption="not in sub query" expr="NOT ({expr1} IN ({expr2}))" format="{expr1} [[not in sub query]] {expr2}" constFmt="{const}" kind="Query" caseIns="False" group="Common operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinToday" caption="today" expr="${{Today}} &lt;= {expr1} AND {expr1} &lt; ${{Tomorrow}}" format="{expr1} [[within today]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinThisWeek" caption="this week" expr="${{FirstDayOfWeek}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfNextWeek}}" format="{expr1} [[within this week]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinPrevWeek" caption="last week" expr="${{FirstDayOfPrevWeek}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfWeek}}" format="{expr1} [[within last week]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinThisMonth" caption="this month" expr="${{FirstDayOfMonth}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfNextMonth}}" format="{expr1} [[within this month]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinPrevMonth" caption="last month" expr="${{FirstDayOfPrevMonth}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfMonth}}" format="{expr1} [[within last month]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinThisYear" caption="this year" expr="${{FirstDayOfYear}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfNextYear}}" format="{expr1} [[within this year]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateWithinPrevYear" caption="last year" expr="${{FirstDayOfPrevYear}} &lt;= {expr1} AND {expr1} &lt; ${{FirstDayOfYear}}" format="{expr1} [[within last year]]" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" />
    </Operator>
    <Operator id="DateBeforeSpecial" caption="before (special)" expr="{expr1} &lt; {expr2}" format="{expr1} [[before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DSDE" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" defVal="${{Today}}" />
    </Operator>
    <Operator id="DateAfterSpecial" caption="after (special)" expr="{expr1} &gt;= {expr2}" format="{expr1} [[after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DSDE" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" defVal="${{FirstDayOfMonth}}" />
    </Operator>
    <Operator id="DateBeforePrecise" caption="before" expr="{expr1} &lt; {expr2}" format="{expr1} [[before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DPDE" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" defVal="${{Today}}" />
    </Operator>
    <Operator id="DateAfterPrecise" caption="after" expr="{expr1} &gt;= {expr2}" format="{expr1} [[after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DPDE" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" defVal="${{FirstDayOfMonth}}" />
    </Operator>
    <Operator id="DatePeriodPrecise" caption="custom period" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[within]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" isRange="True" caseIns="False" editor="_DPDE" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Unknown" defVal="${{Today}}">
        <Operand type="Unknown" kind="Scalar" val="${{FirstDayOfMonth}}" />
        <Operand type="Unknown" kind="Scalar" val="${{Today}}" />
      </Operands>
    </Operator>
    <Operator id="LastNDays" caption="last N days" expr="{expr1} &gt;= @{AddDays(${{Today}},-{expr2})}@" format="{expr1} [[within last]] {expr2} days" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="LastNMonths" caption="last N months" expr="{expr1} &gt;= @{AddMonths(${{Today}},-{expr2})}@" format="{expr1} [[within last]] {expr2} months" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="LastNYears" caption="last N years" expr="{expr1} &gt;= @{AddYears(${{Today}},-{expr2})}@" format="{expr1} [[within last]] {expr2} years" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="NextNDays" caption="next N days" expr="{expr1} &gt; ${{Today}} AND {expr1} &lt;= @{AddDays(${{Today}},{expr2})}@" format="{expr1} [[within next]] {expr2} days" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="NextNMonths" caption="next N months" expr="{expr1} &gt; ${{Today}} AND {expr1} &lt;= @{AddMonths(${{Today}},{expr2})}@" format="{expr1} [[within next]] {expr2} months" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="NextNYears" caption="next N years" expr="{expr1} &gt; ${{Today}} AND {expr1} &lt;= @{AddYears(${{Today}},{expr2})}@" format="{expr1} [[within next]] {expr2} years" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="TimeBeforePrecise" caption="before" expr="{expr1} &lt; {expr2}" format="{expr1} [[before]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DPTE" group="Date/time operators" cond="False">
      <Types>Time</Types>
      <Operands defType="Unknown" defVal="${{Now}}" />
    </Operator>
    <Operator id="TimeAfterPrecise" caption="after" expr="{expr1} &gt;= {expr2}" format="{expr1} [[after]] {expr2}" constFmt="{const}" kind="Scalar" caseIns="False" editor="_DPTE" group="Date/time operators" cond="False">
      <Types>Time</Types>
      <Operands defType="Unknown" defVal="${{HourStart}}" />
    </Operator>
    <Operator id="TimePeriodPrecise" caption="between" expr="{expr1} BETWEEN {expr2} AND {expr3}" format="{expr1} [[between]] {expr2} and {expr3}" constFmt="{const}" kind="Scalar" isRange="True" caseIns="False" editor="_DPTE" group="Date/time operators" cond="False">
      <Types>Time</Types>
      <Operands defType="Unknown" defVal="${{Noon}}">
        <Operand type="Unknown" kind="Scalar" val="${{HourStart}}" />
        <Operand type="Unknown" kind="Scalar" val="${{Now}}" />
      </Operands>
    </Operator>
    <Operator id="LastNHours" caption="last N hours" expr="{expr1} &gt;= @{AddHours(${{Now}}, -{expr2})}@" format="{expr1} [[within last]] {expr2} hours" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,Time,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="NextNHours" caption="next N hours" expr="{expr1} &gt; ${{Now}} AND {expr1} &lt;= @{AddHours(${{Now}}, {expr2})}@" format="{expr1} [[within next]] {expr2} hours" constFmt="{const}" kind="Scalar" caseIns="False" group="Date/time operators" cond="False">
      <Types>Date,Time,DateTime</Types>
      <Operands defType="Int32" />
    </Operator>
    <Operator id="MaximumOfAttr" caption="is maximum of" expr="{expr1} = (SELECT MAX({expr2.field}) FROM {expr2.tableExpr})" format="{expr1} [[is equal to maximum of]] {expr2}" constFmt="{const}" kind="Attribute" caseIns="False" group="Other operators" cond="False">
      <Types>Autoinc,Blob,Bool,Byte,Currency,Date,DateTime,FixedChar,Float,Guid,Int32,Int64,Memo,String,Time,Word</Types>
      <Operands defType="Unknown" />
    </Operator>
  </Operators>
  <Entities maxId="0">
    <Entity id="" name="CallResponses" UIC="True" UIR="True" UIS="True">
      <Attr id="CallResponses.Call_ID" kind="Data" expr="Call_ID" caption="Call_ID" type="Int32" size="0" UIC="True" UIR="True" UIS="True" nul="True" tables="CallResponses">
        <Operators>Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,InList,NotEqual,NotBetween,NotInList,MaximumOfAttr,InSubQuery,NotInSubQuery,IsNull,IsNotNull</Operators>
        <Description />
      </Attr>
      <Attr id="CallResponses.Response" kind="Data" expr="Response" caption="Response" type="String" size="3" UIC="True" UIR="True" UIS="True" nul="True" tables="CallResponses">
        <Operators>StartsWith,Contains,Equal,InList,NotStartsWith,NotContains,NotEqual,NotInList,InSubQuery,NotInSubQuery,IsNull,IsNotNull</Operators>
        <Description />
      </Attr>
    </Entity>
    <Entity id="" name="Clients" UIC="True" UIR="True" UIS="True">
      <Attr id="Clients.Client_ID" kind="Data" expr="Client_ID" caption="Client_ID" type="Int32" size="0" UIC="True" UIR="True" UIS="True" nul="True" tables="Clients">
        <Operators>Equal,Between,LessThan,LessOrEqual,GreaterThan,GreaterOrEqual,InList,NotEqual,NotBetween,NotInList,MaximumOfAttr,InSubQuery,NotInSubQuery,IsNull,IsNotNull</Operators>
        <Description />
      </Attr>
      <Attr id="Clients.Name" kind="Data" expr="Name" caption="Name" type="String" size="50" UIC="True" UIR="True" UIS="True" nul="True" tables="Clients">
        <Operators>StartsWith,Contains,Equal,InList,NotStartsWith,NotContains,NotEqual,NotInList,InSubQuery,NotInSubQuery,IsNull,IsNotNull</Operators>
        <Description />
      </Attr>
      <Attr id="Clients.Surname" kind="Data" expr="Surname" caption="Surname" type="String" size="50" UIC="True" UIR="True" UIS="True" nul="True" tables="Clients">
        <Operators>StartsWith,Contains,Equal,InList,NotStartsWith,NotContains,NotEqual,NotInList,InSubQuery,NotInSubQuery,IsNull,IsNotNull</Operators>
        <Description />
      </Attr>
    </Entity>
  </Entities>
  <DisplayFormats>
    <DisplayFormat type="Bool" name="0/1" format="{0:S0|1}" />
    <DisplayFormat type="Bool" name="False/True" format="{0:SFalse|True}" />
    <DisplayFormat type="Bool" name="No/Yes" format="{0:SNo|Yes}" />
    <DisplayFormat type="Byte" name="3-digit" format="{0:D3}" />
    <DisplayFormat type="Word" name="5-digit" format="{0:D5}" />
    <DisplayFormat type="Int32" name="5-digit" format="{0:D5}" />
    <DisplayFormat type="Int32" name="10-digit" format="{0:D10}" />
    <DisplayFormat type="Int64" name="10-digit" format="{0:D10}" />
    <DisplayFormat type="Float" name="2-precision" format="{0:F2}" />
    <DisplayFormat type="Float" name="3-precision" format="{0:F3}" />
    <DisplayFormat type="Float" name="4-precision" format="{0:F4}" />
    <DisplayFormat type="Currency" name="2-precision" format="{0:F2}" />
    <DisplayFormat type="Currency" name="3-precision" format="{0:F3}" />
    <DisplayFormat type="Currency" name="4-precision" format="{0:F4}" />
    <DisplayFormat type="Date" name="Short date" format="{0:d}" />
    <DisplayFormat type="Date" name="Long date" format="{0:D}" />
    <DisplayFormat type="Date" name="Universal" format="{0:u}" />
    <DisplayFormat type="Time" name="Short time" format="{0:HH:mm}" />
    <DisplayFormat type="Time" name="Full time" format="{0:HH:mm:ss}" />
    <DisplayFormat type="DateTime" name="Short date &amp; time" format="{0:f}" />
    <DisplayFormat type="DateTime" name="Long date &amp; time" format="{0:F}" />
    <DisplayFormat type="DateTime" name="Short date" format="{0:d}" />
    <DisplayFormat type="DateTime" name="Long date" format="{0:D}" />
    <DisplayFormat type="DateTime" name="Short time" format="{0:HH:mm}" />
    <DisplayFormat type="DateTime" name="Full time" format="{0:HH:mm:ss}" />
    <DisplayFormat type="DateTime" name="Universal" format="{0:u}" />
  </DisplayFormats>
</DataModel>